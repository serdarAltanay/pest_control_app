generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admins {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(255)
  email      String      @unique(map: "email") @db.VarChar(255)
  password   String      @db.VarChar(255)
  created_at DateTime    @default(now()) @db.Timestamp(0)
  employees  employees[]
}

model customers {
  id                Int       @id @default(autoincrement())
  name              String    @db.VarChar(255) // Ad Soyad
  email             String?   @unique @db.VarChar(255) // Opsiyonel login için
  password          String?   @db.VarChar(255) // Opsiyonel login şifresi
  title             String?   @db.VarChar(255) // Ünvan
  assigned_to       Int? // Hangi çalışan sorumlu
  parent_company_id Int? // Bağlı olduğu grup şirket
  store_id          Int? // Bağlı olduğu mağaza (opsiyonel)
  job_start_date    DateTime? @db.Date
  registered_at     DateTime? @default(now()) @db.Timestamp(0)

  // Relations
  employees     employees?  @relation(fields: [assigned_to], references: [id], onUpdate: NoAction)
  parentCompany customers?  @relation("GroupToStore", fields: [parent_company_id], references: [id])
  stores        customers[] @relation("GroupToStore")

  @@index([assigned_to])
  @@index([parent_company_id])
  @@index([store_id])
}

model employees {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  email       String      @unique(map: "email") @db.VarChar(255)
  password    String      @db.VarChar(255)
  assigned_to Int?
  created_at  DateTime?   @default(now()) @db.Timestamp(0)
  customers   customers[]
  admins      admins?     @relation(fields: [assigned_to], references: [id], onUpdate: NoAction, map: "employees_ibfk_1")

  @@index([assigned_to], map: "assigned_to")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  role      String
  createdAt DateTime @default(now())
  expiresAt DateTime
}
