// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum VisitPeriod {
  HAFTALIK
  IKIHAFTALIK
  AYLIK
  IKIAYLIK
  UCAYLIK
  BELIRTILMEDI
}

enum PestType {
  KEMIRGEN
  HACCADI
  UCAN
  BELIRTILMEDI
}

enum PlaceType {
  OFIS
  DEPO
  MAGAZA
  FABRIKA
  BELIRTILMEDI
}

model Admin {
  id            Int       @id @default(autoincrement())
  fullName      String
  email         String    @unique
  password      String
  profileImage  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLoginAt   DateTime?
  lastProfileAt DateTime?
  lastSeenAt    DateTime?

  // relations
  employees Employee[]
}

model Employee {
  id            Int       @id @default(autoincrement())
  fullName      String
  email         String    @unique // <- zorunlu
  password      String // <- zorunlu
  jobTitle      String // <- zorunlu
  gsm           String // <- zorunlu
  profileImage  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLoginAt   DateTime?
  lastProfileAt DateTime?
  lastSeenAt    DateTime? // <- heartbeat için

  // bağlı admin
  adminId Int?
  admin   Admin? @relation(fields: [adminId], references: [id])

  // relations
  customers Customer[] // Sorumlu olduğu müşteriler
}

model Customer {
  id              Int     @id @default(autoincrement())
  code            String  @unique // Müşteri Kodu
  title           String // Ünvan & Müşteri Adı
  accountingTitle String? // Muhasebe Ünvanı
  email           String? @unique
  password        String?
  contactFullName String? // Yetkili kişi
  phone           String? // Firma iletişim telefon
  gsm             String? // Firma iletişim GSM
  taxOffice       String? // Vergi Dairesi
  taxNumber       String? // Vergi No & T.C.K.N
  address         String?
  city            String?

  pestType    PestType    @default(BELIRTILMEDI) // Hedef Zararlı Türü
  areaM2      Float? // Uygulama alanı m²
  placeType   PlaceType   @default(BELIRTILMEDI) // Uygulama yeri
  showBalance Boolean     @default(false) // Güncel bakiye görünsün mü?
  visitPeriod VisitPeriod @default(BELIRTILMEDI) // Uygulama & ziyaret periyodu

  profileImage  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLoginAt   DateTime?
  lastProfileAt DateTime?
  lastSeenAt    DateTime? // <- heartbeat için

  stores Store[]

  // Sorumlu personel
  employeeId Int?
  employee   Employee? @relation(fields: [employeeId], references: [id])
}

model Store {
  id         Int      @id @default(autoincrement())
  customerId Int
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)

  name     String
  code     String? // benzersiz değilse nullable bırak
  city     String?
  address  String?
  phone    String?
  manager  String?
  isActive Boolean @default(true)

  // YENİ: Koordinatlar
  latitude  Decimal? @db.Decimal(10, 7) // ~0.1m hassasiyet
  longitude Decimal? @db.Decimal(10, 7)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([customerId, code], map: "store_customer_code_unique")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  role      String
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@unique([userId, role], name: "userId_role_unique")
}
